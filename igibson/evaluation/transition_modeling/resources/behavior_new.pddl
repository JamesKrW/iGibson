(define (domain igibson-actions)

    (:requirements :strips :adl :typing :negative-preconditions)

    (:types 
        object agent.n.01
    )

    (:predicates 
        (inside ?obj1 ?obj2)
        (nextto ?obj1 ?obj2)
        (ontop ?obj1 ?obj2)
        (under ?obj1 ?obj2)
        (broken ?obj1)
        (burnt ?obj1)
        (cooked ?obj1)
        (dusty ?obj1)
        (frozen ?obj1)
        (open ?obj1)
        (perished ?obj1)
        (screwed ?obj1)
        (stained ?obj1)
        (sliced ?obj1)
        (soaked ?obj1)
        (timeset ?obj1)
        (toggled_on ?obj1)
        (inroom ?obj1 ?room1)
        (onfloor ?obj1 ?floor1)
        (touching ?obj1 ?obj2)
        (holding ?obj1)
        (handsfull ?agent)
        (facsimile_n_02 ?obj1)
        (vacuum_n_04 ?obj1)
        (dishtowel_n_01 ?obj1)
        (apparel_n_01 ?obj1)
        (seat_n_03 ?obj1)
        (bottle_n_01 ?obj1)
        (mouse_n_04 ?obj1)
        (window_n_01 ?obj1)
        (scanner_n_02 ?obj1)
        (sauce_n_01 ?obj1)
        (spoon_n_01 ?obj1)
        (date_n_08 ?obj1)
        (egg_n_02 ?obj1)
        (cabinet_n_01 ?obj1)
        (yogurt_n_01 ?obj1)
        (parsley_n_02 ?obj1)
        (notebook_n_01 ?obj1)
        (dryer_n_01 ?obj1)
        (saucepan_n_01 ?obj1)
        (soap_n_01 ?obj1)
        (package_n_02 ?obj1)
        (headset_n_01 ?obj1)
        (fish_n_02 ?obj1)
        (vehicle_n_01 ?obj1)
        (chestnut_n_03 ?obj1)
        (grape_n_01 ?obj1)
        (wrapping_n_01 ?obj1)
        (makeup_n_01 ?obj1)
        (mug_n_04 ?obj1)
        (pasta_n_02 ?obj1)
        (beef_n_02 ?obj1)
        (scrub_brush_n_01 ?obj1)
        (cracker_n_01 ?obj1)
        (flour_n_01 ?obj1)
        (sunglass_n_01 ?obj1)
        (cookie_n_01 ?obj1)
        (bed_n_01 ?obj1)
        (lamp_n_02 ?obj1)
        (food_n_02 ?obj1)
        (painting_n_01 ?obj1)
        (carving_knife_n_01 ?obj1)
        (pop_n_02 ?obj1)
        (tea_bag_n_01 ?obj1)
        (sheet_n_03 ?obj1)
        (tomato_n_01 ?obj1)
        (hat_n_01 ?obj1)
        (dish_n_01 ?obj1)
        (cheese_n_01 ?obj1)
        (perfume_n_02 ?obj1)
        (toilet_n_02 ?obj1)
        (broccoli_n_02 ?obj1)
        (book_n_02 ?obj1)
        (towel_n_01 ?obj1)
        (table_n_02 ?obj1)
        (pencil_n_01 ?obj1)
        (rag_n_01 ?obj1)
        (peach_n_03 ?obj1)
        (water_n_06 ?obj1)
        (cup_n_01 ?obj1)
        (radish_n_01 ?obj1)
        (marker_n_03 ?obj1)
        (tile_n_01 ?obj1)
        (box_n_01 ?obj1)
        (screwdriver_n_01 ?obj1)
        (raspberry_n_02 ?obj1)
        (banana_n_02 ?obj1)
        (grill_n_02 ?obj1)
        (caldron_n_01 ?obj1)
        (vegetable_oil_n_01 ?obj1)
        (necklace_n_01 ?obj1)
        (brush_n_02 ?obj1)
        (washer_n_03 ?obj1)
        (hamburger_n_01 ?obj1)
        (catsup_n_01 ?obj1)
        (sandwich_n_01 ?obj1)
        (plaything_n_01 ?obj1)
        (candy_n_01 ?obj1)
        (cereal_n_03 ?obj1)
        (door_n_01 ?obj1)
        (food_n_01 ?obj1)
        (newspaper_n_03 ?obj1)
        (hanger_n_02 ?obj1)
        (carrot_n_03 ?obj1)
        (salad_n_01 ?obj1)
        (toothpaste_n_01 ?obj1)
        (blender_n_01 ?obj1)
        (sofa_n_01 ?obj1)
        (plywood_n_01 ?obj1)
        (olive_n_04 ?obj1)
        (briefcase_n_01 ?obj1)
        (christmas_tree_n_05 ?obj1)
        (bowl_n_01 ?obj1)
        (casserole_n_02 ?obj1)
        (apple_n_01 ?obj1)
        (basket_n_01 ?obj1)
        (pot_plant_n_01 ?obj1)
        (backpack_n_01 ?obj1)
        (sushi_n_01 ?obj1)
        (saw_n_02 ?obj1)
        (toothbrush_n_01 ?obj1)
        (lemon_n_01 ?obj1)
        (pad_n_01 ?obj1)
        (receptacle_n_01 ?obj1)
        (sink_n_01 ?obj1)
        (countertop_n_01 ?obj1)
        (melon_n_01 ?obj1)
        (bracelet_n_02 ?obj1)
        (modem_n_01 ?obj1)
        (pan_n_01 ?obj1)
        (oatmeal_n_01 ?obj1)
        (calculator_n_02 ?obj1)
        (duffel_bag_n_01 ?obj1)
        (sandal_n_01 ?obj1)
        (floor_n_01 ?obj1)
        (snack_food_n_01 ?obj1)
        (stocking_n_01 ?obj1)
        (dishwasher_n_01 ?obj1)
        (pencil_box_n_01 ?obj1)
        (chicken_n_01 ?obj1)
        (jar_n_01 ?obj1)
        (alarm_n_02 ?obj1)
        (stove_n_01 ?obj1)
        (plate_n_04 ?obj1)
        (highlighter_n_02 ?obj1)
        (umbrella_n_01 ?obj1)
        (piece_of_cloth_n_01 ?obj1)
        (bin_n_01 ?obj1)
        (ribbon_n_01 ?obj1)
        (chip_n_04 ?obj1)
        (shelf_n_01 ?obj1)
        (bucket_n_01 ?obj1)
        (shampoo_n_01 ?obj1)
        (folder_n_02 ?obj1)
        (shoe_n_01 ?obj1)
        (detergent_n_02 ?obj1)
        (milk_n_01 ?obj1)
        (beer_n_01 ?obj1)
        (shirt_n_01 ?obj1)
        (dustpan_n_02 ?obj1)
        (cube_n_05 ?obj1)
        (broom_n_01 ?obj1)
        (candle_n_01 ?obj1)
        (pen_n_01 ?obj1)
        (microwave_n_02 ?obj1)
        (knife_n_01 ?obj1)
        (wreath_n_01 ?obj1)
        (car_n_01 ?obj1)
        (soup_n_01 ?obj1)
        (sweater_n_01 ?obj1)
        (tray_n_01 ?obj1)
        (juice_n_01 ?obj1)
        (underwear_n_01 ?obj1)
        (orange_n_01 ?obj1)
        (envelope_n_01 ?obj1)
        (fork_n_01 ?obj1)
        (lettuce_n_03 ?obj1)
        (bathtub_n_01 ?obj1)
        (earphone_n_01 ?obj1)
        (pool_n_01 ?obj1)
        (printer_n_03 ?obj1)
        (sack_n_01 ?obj1)
        (highchair_n_01 ?obj1)
        (cleansing_agent_n_01 ?obj1)
        (kettle_n_01 ?obj1)
        (vidalia_onion_n_01 ?obj1)
        (mousetrap_n_01 ?obj1)
        (bread_n_01 ?obj1)
        (meat_n_01 ?obj1)
        (mushroom_n_05 ?obj1)
        (cake_n_03 ?obj1)
        (vessel_n_03 ?obj1)
        (bow_n_08 ?obj1)
        (gym_shoe_n_01 ?obj1)
        (hammer_n_02 ?obj1)
        (teapot_n_01 ?obj1)
        (chair_n_01 ?obj1)
        (jewelry_n_01 ?obj1)
        (pumpkin_n_02 ?obj1)
        (sugar_n_01 ?obj1)
        (shower_n_01 ?obj1)
        (ashcan_n_01 ?obj1)
        (hand_towel_n_01 ?obj1)
        (pork_n_01 ?obj1)
        (strawberry_n_01 ?obj1)
        (electric_refrigerator_n_01 ?obj1)
        (oven_n_01 ?obj1)
        (ball_n_01 ?obj1)
        (document_n_01 ?obj1)
        (sock_n_01 ?obj1)
        (beverage_n_01 ?obj1)
        (hardback_n_01 ?obj1)
        (scraper_n_01 ?obj1)
        (carton_n_02 ?obj1)
    )

    (:action navigate_to
        :parameters (?objto - object ?agent - agent.n.01)
        :precondition (not (nextto ?objto ?agent))
        :effect (and (nextto ?objto ?agent) 
                        (when 
                            (exists 
                                (?objfrom - object) 
                                (nextto ?objfrom ?agent)
                            )
                            (not (nextto ?objfrom ?agent))
                        ) 
                )
    )

    (:action grasp
        :parameters (?obj - object ?agent - agent.n.01)
        :precondition (and (not (holding ?obj))
                            (not (handsfull ?agent)) 
                            (nextto ?obj ?agent))
        :effect (and (holding ?obj) 
                        (handsfull ?agent))

    )

    

    (:action place_ontop ; place object 1 onto object 2
        :parameters (?obj2 - object ?agent - agent.n.01 ?obj1 - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?obj2 ?agent))
        :effect (and (ontop ?obj1 ?obj2) 
                        (not (holding ?obj1)) 
                        (not (handsfull ?agent)))
    )

    (:action place_inside ; place object 1 inside object 2
        :parameters (?obj2 - object ?agent - agent.n.01 ?obj1 - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?obj2 ?agent) 
                            (open ?obj2))
        :effect (and (inside ?obj1 ?obj2) 
                        (not (holding ?obj1)) 
                        (not (handsfull ?agent)))
    )

    (:action open
        :parameters (?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (not (open ?obj))
                            (not (handsfull ?agent)))
        :effect (open ?obj)
    )

    (:action close
        :parameters (?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (open ?obj)
                            (not (handsfull ?agent)))
        :effect (not (open ?obj))
    )

    (:action grasp_inside ; will need obj open precondition later
        :parameters (?obj1 - object ?agent - agent.n.01 ?obj2 - object)
        :precondition (and (not (holding ?obj1))
                            (not (handsfull ?agent)) 
                            (nextto ?obj2 ?agent)
                            (inside ?obj1 ?obj2))
        :effect (and (holding ?obj1) 
                    (handsfull ?agent)
                    (not (inside ?obj1 ?obj2)))
    )

    (:action slice
        :parameters (?obj - object ?agent - agent.n.01 ?knife - object)
        :precondition (and (holding ?knife) 
                            (nextto ?obj ?agent)
                            (knife_n_01 ?knife))
        :effect (sliced ?obj)
    )

    (:action slice-carvingknife
        :parameters (?obj - object ?knife - object ?board - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent)
                           (holding ?knife)
                           (ontop ?obj ?board)
                           (not (sliced ?obj))
                           (carving_knife_n_01 ?knife)
                           (countertop_n_01 ?board))
        :effect (sliced ?obj)
    )


    (:action place_onfloor
        :parameters (?floor - object ?agent - agent.n.01 ?obj1 - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?floor ?agent)
                            (floor_n_01 ?floor))
        :effect (and (onfloor ?obj1 ?floor) 
                        (not (holding ?obj1)) 
                        (not (handsfull ?agent)))
    )

    (:action place_nextto
        :parameters (?obj2 - object ?agent - agent.n.01 ?obj1 - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?obj2 ?agent))
        :effect (and (nextto ?obj1 ?obj2) 
                        (not (holding ?obj1)) 
                        (not (handsfull ?agent)))
    )

    (:action place_nextto_ontop
        :parameters (?obj2 - object ?agent - agent.n.01 ?obj1 - object ?obj3 - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?obj2 ?agent)
                            (nextto ?obj3 ?agent))
        :effect (and (nextto ?obj1 ?obj2)
                     (ontop ?obj1 ?obj3) 
                        (not (holding ?obj1)) 
                        (not (handsfull ?agent)))
    )

    (:action place_touching
        :parameters (?obj2 - object ?agent - agent.n.01 ?obj1 - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?obj2 ?agent))
        :effect (and (touching ?obj1 ?obj2) 
                        (not (holding ?obj1)) 
                        (not (handsfull ?agent)))
    )

    (:action clean_stained_brush
        :parameters (?scrub_brush - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (stained ?obj)
                            (soaked ?scrub_brush)
                            (holding ?scrub_brush)
                            (scrub_brush_n_01 ?scrub_brush))
        :effect (not (stained ?obj))
    )

    (:action clean_stained_cloth
        :parameters (?rag - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (stained ?obj)
                            (soaked ?rag)
                            (holding ?rag)
                            (piece_of_cloth_n_01 ?rag))
        :effect (not (stained ?obj))
    )

    (:action clean_stained_handowel
        :parameters (?hand_towel - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (stained ?obj)
                            (soaked ?hand_towel)
                            (holding ?hand_towel)
                            (hand_towel_n_01 ?hand_towel))
        :effect (not (stained ?obj))
    )

    (:action clean_stained_towel
        :parameters (?hand_towel - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (stained ?obj)
                            (soaked ?hand_towel)
                            (holding ?hand_towel)
                            (towel_n_01 ?hand_towel))
        :effect (not (stained ?obj))
    )

    (:action clean_stained_dishtowel
        :parameters (?hand_towel - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (stained ?obj)
                            (soaked ?hand_towel)
                            (holding ?hand_towel)
                            (dishtowel_n_01 ?hand_towel))
        :effect (not (stained ?obj))
    )

    (:action clean_stained_dishwasher ; this should be a plan where objects are put in and then dishwasher is closed and toggled-on
        :parameters (?dishwasher - object ?obj - object ?agent - agent.n.01)
        :precondition (and (holding ?obj)
                            (open ?dishwasher)
                            (nextto ?dishwasher ?agent)
                            (dishwasher_n_01 ?dishwasher))
        :effect (not (stained ?obj))
    )

    (:action clean_stained_rag
        :parameters (?rag - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (stained ?obj)
                            (soaked ?rag)
                            (holding ?rag)
                            (rag_n_01 ?rag))
        :effect (not (stained ?obj))
    )

    (:action soak
        :parameters (?obj1 - object ?agent - agent.n.01 ?sink - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?sink ?agent)
                            (toggled_on ?sink)
                            (sink_n_01 ?sink))
        :effect (soaked ?obj1)
    )

    (:action soak_teapot
        :parameters (?obj1 - object ?agent - agent.n.01 ?teapot - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?teapot ?agent)
                            (teapot_n_01 ?teapot))
        :effect (soaked ?obj1)
    )

    (:action place_under ; place object 1 under object 2
        :parameters (?obj2 - object ?agent - agent.n.01 ?obj1 - object)
        :precondition (and (holding ?obj1) 
                            (nextto ?obj2 ?agent))
        :effect (and (under ?obj1 ?obj2) 
                        (not (holding ?obj1)) 
                        (not (handsfull ?agent)))
    )

    (:action toggle_on
        :parameters (?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent)
                            (not (handsfull ?agent)))
        :effect (toggled_on ?obj)
    )

    (:action clean_dusty_rag
        :parameters (?rag - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (dusty ?obj)
                            (holding ?rag)
                            (rag_n_01 ?rag))
        :effect (not (dusty ?obj))
    )

    (:action clean_dusty_towel
        :parameters (?towel - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (dusty ?obj)
                            (holding ?towel)
                            (towel_n_01 ?towel))
        :effect (not (dusty ?obj))
    )


    (:action clean_inside_dusty
        :parameters (?rag - object ?obj1 - object ?agent - agent.n.01 ?obj2 - object)
        :precondition (and (inside ?obj1 ?obj2)
                            (nextto ?obj2 ?agent) 
                            (dusty ?obj1)
                            (holding ?rag)
                            (rag_n_01 ?rag))
        :effect (not (dusty ?obj1))
    )

    (:action clean_dusty_cloth
        :parameters (?rag - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (dusty ?obj)
                            (holding ?rag)
                            (piece_of_cloth_n_01 ?rag))
        :effect (not (dusty ?obj))
    )

    (:action clean_dusty_brush
        :parameters (?scrub_brush - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (dusty ?obj)
                            (holding ?scrub_brush)
                            (scrub_brush_n_01))
        :effect (not (dusty ?obj))
    )

    (:action clean_dusty_vacuum
        :parameters (?vacuum - object ?obj - object ?agent - agent.n.01)
        :precondition (and (nextto ?obj ?agent) 
                            (dusty ?obj)
                            (holding ?vacuum)
                            (vacuum_n_04 ?vacuum))
        :effect (not (dusty ?obj))
    )

    (:action freeze
        :parameters (?obj - object ?fridge - object)
        :precondition (and (inside ?obj ?fridge)
                           (not (frozen ?obj))
                           (electric_refrigerator_n_01 ?fridge))
        :effect (frozen ?obj)
    )

    (:action cook
        :parameters (?obj - object ?pan - object)
        :precondition (and (ontop ?obj ?pan)
                           (not (cooked ?obj))
                           (pan_n_01 ?pan))
        :effect (cooked ?obj)
    )

)